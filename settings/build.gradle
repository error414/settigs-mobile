buildscript {
    repositories {
        maven   {url 'http://repo1.maven.org/maven2'}
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:1.3.0'
    }
}
apply plugin: 'android'

repositories {
    mavenCentral()
}


dependencies {
    compile fileTree(dir: 'libs', include: '*.jar')
    compile 'net.simonvt.menudrawer:menudrawer:3.0.+@aar'
    compile 'ar.com.hjg:pngj:2.1.0'
    compile files('libs/itextpdf-5.5.4-custom.jar')
}

android {
    compileSdkVersion 17
    buildToolsVersion '21.1.2'
    defaultConfig {
        minSdkVersion 8
        targetSdkVersion 17
    }

    productFlavors {
        heli {
            applicationId "com.spirit"
            resValue "string", "app_name", "Spirit Settings"
            resValue "string", "full_app_name", "Spirit Settings"
            resValue "string", "short_title", "Spirit"
            versionCode 201
            versionName "1.3.23"
        }

        aero {
            applicationId "com.spiritAero"
            resValue "string", "app_name", "Spirit Settings Aero"
            resValue "string", "full_app_name", "Spirit Settings Aero"
            resValue "string", "short_title", "Spirit Aero"
            versionCode 1
            versionName "1.0.0"
        }
    }

    lintOptions {
        disable 'MissingTranslation'
    }

    signingConfigs {
        release
    }
    buildTypes {
        release {
            signingConfig signingConfigs.release
        }
    }
    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            java.srcDirs = ['src']
            resources.srcDirs = ['src']
            aidl.srcDirs = ['src']
            renderscript.srcDirs = ['src']
            res.srcDirs = ['res']
            assets.srcDirs = ['assets']
        }


        debug.setRoot('build-types/debug')
        release.setRoot('build-types/release')
    }

    // U T I L I T Y   T A S K S  =================================================================
    task preAssemblePRODUCTION_HELI(type: Exec) {
        executable "sh"
        args "-c", "php -f ./gradle-exec/assembleHeli.php release"
    }

    task preAssembleDEVEL_HELI(type: Exec) {
        executable "sh"
        args "-c", "php -f ./gradle-exec/assembleHeli.php devel"
    }

    task preAssemblePRODUCTION_AERO(type: Exec) {
        executable "sh"
        args "-c", "php -f ./gradle-exec/assembleAero.php release"
    }

    task preAssembleDEVEL_AERO(type: Exec) {
        executable "sh"
        args "-c", "php -f ./gradle-exec/assembleAero.php devel"
    }




    task assemblePRODUCTION_HELI(dependsOn: ['preAssemblePRODUCTION_HELI', 'assembleHeliRelease'], type:Exec) {
        executable "sh"
        args "-c", "echo 'DONE'"
    }
    preBuild.mustRunAfter preAssemblePRODUCTION_HELI;

    task assembleDEVEL_HELI(dependsOn: ['preAssembleDEVEL_HELI', 'assembleHeliRelease'], type:Exec) {
        executable "sh"
        args "-c", "echo 'DONE'"
    }
    preBuild.mustRunAfter preAssembleDEVEL_HELI;



    task assemblePRODUCTION_AERO(dependsOn: ['preAssemblePRODUCTION_AERO', 'assembleAeroRelease'], type:Exec) {
        executable "sh"
        args "-c", "echo 'DONE'"
    }
    preBuild.mustRunAfter preAssemblePRODUCTION_AERO;

    task assembleDEVEL_AERO(dependsOn: ['preAssembleDEVEL_AERO', 'assembleAeroRelease'], type:Exec) {
        executable "sh"
        args "-c", "echo 'DONE'"
    }
    preBuild.mustRunAfter preAssembleDEVEL_AERO;

}

def props = new Properties()
props.load(new FileInputStream(rootProject.file("release.properties")))
android.signingConfigs.release.storeFile rootProject.file(props.keyStore)
android.signingConfigs.release.storePassword props.keyStorePassword
android.signingConfigs.release.keyAlias props.keyAlias
android.signingConfigs.release.keyPassword props.keyAliasPassword

task wrapper(type: Wrapper) {
   gradleVersion = '2.7'
}




