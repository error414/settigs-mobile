buildscript {
    repositories {
        maven   {url 'http://repo1.maven.org/maven2'}
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:1.0.0'
    }
}
apply plugin: 'android'

repositories {
    mavenCentral()
}


dependencies {
    compile fileTree(dir: 'libs', include: '*.jar')
    compile 'net.simonvt.menudrawer:menudrawer:3.0.+@aar'
    compile files('libs/itextpdf-5.5.4-custom.jar')
    compile 'com.joanzapata.pdfview:android-pdfview:1.0.+@aar'
    compile 'com.akexorcist:bluetoothspp:1.0.0'
}

android {
    compileSdkVersion 17
    buildToolsVersion '21.1.2'
    defaultConfig {
        minSdkVersion 8
        targetSdkVersion 17
    }
    signingConfigs {
        release
    }
    buildTypes {
        release {
            signingConfig signingConfigs.release
        }
    }
    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            java.srcDirs = ['src']
            resources.srcDirs = ['src']
            aidl.srcDirs = ['src']
            renderscript.srcDirs = ['src']
            res.srcDirs = ['res']
            assets.srcDirs = ['assets']
        }


        debug.setRoot('build-types/debug')
        release.setRoot('build-types/release')
    }

    // U T I L I T Y   T A S K S  =================================================================
    task buildHelpText(type: Exec) {
        //update build info
        executable "sh"
        args "-c", "php -f ./gradle-exec/buildhelpText.php"
    }

    task createHelpPDFLinksDevel(type: Exec) {
        //update build info
        executable "sh"
        args "-c", "php -f ./gradle-exec/createHelpPDFLinks.php devel"
    }

    task createHelpPDFLinksProduction(type: Exec) {
        //update build info
        executable "sh"
        args "-c", "php -f ./gradle-exec/createHelpPDFLinks.php release"
    }

    task buildInfoRelase(type: Exec) {
        //update build info
        executable "sh"
        args "-c", "php -f ./gradle-exec/updateRevision.php release"
    }

    task buildInfoDevel(type: Exec) {
        //update build info
        executable "sh"
        args "-c", "php -f ./gradle-exec/updateRevision.php devel"
    }

    task convertPngImage(type: Exec) {
        //update build info
        executable "sh"
        args "-c", "./gradle-exec/convertImage.sh"
    }

    task info(type: Exec) {
        //update build info
        executable "sh"
        args "-c", "php -f ./gradle-exec/info.php"
    }



    task assemblePRODUCTION(dependsOn: ['buildHelpText', 'buildInfoRelase', 'createHelpPDFLinksProduction', 'info', 'assembleRelease'], type:Exec) {
        executable "sh"
        args "-c", "echo 'DONE'"
    }
    assembleRelease.mustRunAfter buildInfoRelase;

    task assembleDEVEL(dependsOn: ['buildHelpText', 'buildInfoDevel', 'createHelpPDFLinksDevel', 'info', 'assembleRelease'], type:Exec) {
        executable "sh"
        args "-c", "echo 'DONE'"
    }
    assembleRelease.mustRunAfter buildInfoDevel;

    assembleRelease.mustRunAfter buildHelpText;
    assembleRelease.mustRunAfter createHelpPDFLinksDevel;
    assembleRelease.mustRunAfter createHelpPDFLinksProduction;
    info.mustRunAfter assembleRelease;
}

def props = new Properties()
props.load(new FileInputStream(rootProject.file("release.properties")))
android.signingConfigs.release.storeFile rootProject.file(props.keyStore)
android.signingConfigs.release.storePassword props.keyStorePassword
android.signingConfigs.release.keyAlias props.keyAlias
android.signingConfigs.release.keyPassword props.keyAliasPassword






